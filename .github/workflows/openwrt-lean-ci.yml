name: OpenWrt-Lean-CI

on:
  push:
    branches:
      - master
  schedule:
    - cron: 0 4 1,11,21 * *

jobs:
  build-default:
    name: Build Lean OpenWrt (Mini)
    runs-on: ubuntu-18.04
    steps:
      - name: Define ENV
        run: echo "::set-env name=DATETIMESTR::OpenWrt-Lean-Mini-$(date +%Y%m%d_%H%M)"

      - name: Checkout
        uses: actions/checkout@v2
        with:
          ref: master

      # - name: Checkout Lean LEDE
      #   uses: actions/checkout@v2
      #   with:
      #     repository: coolsnowwolf/lede
      #     path: lede

      # - name: Prepare Environment
      #   env:
      #     DEBIAN_FRONTEND: noninteractive
      #   run: |
      #     # docker rmi `docker images -q`
      #     sudo rm -rf /usr/share/dotnet /etc/mysql /etc/php /etc/apt/sources.list.d
      #     sudo -E apt-get -y purge azure-cli ghc* zulu* hhvm llvm* firefox google* dotnet* powershell openjdk* mysql* php*
      #     sudo -E apt-get update
      #     sudo -E apt-get -y install build-essential asciidoc binutils bzip2 gawk gettext git libncurses5-dev libz-dev patch python3 unzip zlib1g-dev lib32gcc1 libc6-dev-i386 subversion flex uglifyjs gcc-multilib g++-multilib p7zip p7zip-full msmtp libssl-dev texinfo libglib2.0-dev xmlto qemu-utils upx libelf-dev autoconf automake libtool autopoint device-tree-compiler antlr3 gperf
      #     sudo -E apt-get -y autoremove --purge
      #     sudo -E apt-get clean
      #     df -h

      # - name: Update Feeds
      #   run: |
      #     cd lede
      #     sed -i 's/\#src-git/src-git/g' ./feeds.conf.default
      #     echo "======================="
      #     echo "feeds.conf.default:"
      #     echo "======================="
      #     cat ./feeds.conf.default
      #     echo "======================="
      #     ./scripts/feeds update -a
      #     ./scripts/feeds install -a

      # - name: Prepare Configuration File
      #   run: |
      #     cp config.mini ./lede/.config
      #     # cd lede
      #     # make defconfig

      # - name: Download 3rd Parity Packages
      #   run: |
      #     cd lede
      #     make download -j8
      #     find dl -size -1024c -exec rm -f {} \;

      # - name: Compile Firmware
      #   run: |
      #     cd lede
      #     git log --pretty=format:'%cs: %s' > ChangeLog.txt
      #     make -j$(nproc) || make -j1 V=s
      #     echo "======================="
      #     echo "Space usage:"
      #     echo "======================="
      #     df -h
      #     echo "======================="
      #     du -h --max-depth=1 ./ --exclude=build_dir --exclude=bin
      #     du -h --max-depth=1 ./build_dir
      #     du -h --max-depth=1 ./bin

      # - name: Prepare Artifact
      #   run: |
      #     echo "======================="
      #     echo "Targets:"
      #     echo "======================="
      #     ls -lh ./lede/bin/targets/x86/64/
      #     echo "======================="
      #     # DIRNAME="OpenWrt-$(date +%Y%m%d_%H%M)"
      #     DIRNAME="${{ env.DATETIMESTR }}"
      #     mkdir ./$DIRNAME
      #     find ./lede/bin/targets/x86/64/ -maxdepth 1 -type f           \
      #       -not -name "*efi*" -not -name "*rootfs*" -not -name "*.bin" \
      #       -not -name "*.vmdk" -not -name "*sha256*" | xargs -I {} cp {} ./$DIRNAME/
      #     cp ./lede/.config ./$DIRNAME/
      #     cp ./lede/ChangeLog.txt ./$DIRNAME/
      #     cd ./$DIRNAME/ && sha256sum * > checksums.sha256 && cd ..
      #     ls -lh ./$DIRNAME/
      #     tar czf $DIRNAME.tar.gz ./$DIRNAME/
      #     ls -lh

      # - name: Transfer Artifact
      #   uses: appleboy/scp-action@master
      #   with:
      #     host: ${{ secrets.HOST }}
      #     port: ${{ secrets.PORT }}
      #     username: ${{ secrets.USERNAME }}
      #     password: ${{ secrets.PASSWORD }}
      #     timeout: 300s
      #     source: "./${{ env.DATETIMESTR }}.tar.gz"
      #     target: "/home/bwang/data/OpenWrt_Lean/"

      - name: Prepare File
        run: |
            mkdir ./tmp
            git log > ChangeLog.org
            tar czf ./tmp/${{ env.DATETIMESTR }}.tar.gz *.org
            ls -lh
            ls -lk ./tmp

      - name: Test FTP
        uses: SamKirkland/FTP-Deploy-Action@3.1.1
        with:
          ftp-server: ftp://bw-www.aromabeauty.cn/
          ftp-username: ${{ secrets.FTP_USERNAME }}
          ftp-password: ${{ secrets.FTP_PASSWORD }}
          local-dir:: "tmp"
